package erpscm.modelscm.scmeo;

import erpglobals.modelglobals.ERPEntityImpl;
import erpglobals.modelglobals.ERPGlobalPLSQLClass;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 03 21:11:49 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ScmCustomerCategotyTaxImpl extends ERPEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CustomerCategoryTaxSno,
        CategorySno,
        OpenDate,
        TaxTypeSno,
        IsActive,
        CompanyId,
        GlobalCompanyId,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        ScmCustomerCategory,
        ScmCustomerCategory1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CUSTOMERCATEGORYTAXSNO = AttributesEnum.CustomerCategoryTaxSno.index();
    public static final int CATEGORYSNO = AttributesEnum.CategorySno.index();
    public static final int OPENDATE = AttributesEnum.OpenDate.index();
    public static final int TAXTYPESNO = AttributesEnum.TaxTypeSno.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int GLOBALCOMPANYID = AttributesEnum.GlobalCompanyId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int SCMCUSTOMERCATEGORY = AttributesEnum.ScmCustomerCategory.index();
    public static final int SCMCUSTOMERCATEGORY1 = AttributesEnum.ScmCustomerCategory1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ScmCustomerCategotyTaxImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpscm.modelscm.scmeo.ScmCustomerCategotyTax");
    }


    /**
     * Gets the attribute value for CustomerCategoryTaxSno, using the alias name CustomerCategoryTaxSno.
     * @return the value of CustomerCategoryTaxSno
     */
    public Integer getCustomerCategoryTaxSno() {
        return (Integer) getAttributeInternal(CUSTOMERCATEGORYTAXSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerCategoryTaxSno.
     * @param value value to set the CustomerCategoryTaxSno
     */
    public void setCustomerCategoryTaxSno(Integer value) {
        setAttributeInternal(CUSTOMERCATEGORYTAXSNO, value);
    }

    /**
     * Gets the attribute value for CategorySno, using the alias name CategorySno.
     * @return the value of CategorySno
     */
    public Integer getCategorySno() {
        return (Integer) getAttributeInternal(CATEGORYSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategorySno.
     * @param value value to set the CategorySno
     */
    public void setCategorySno(Integer value) {
        setAttributeInternal(CATEGORYSNO, value);
    }

    /**
     * Gets the attribute value for OpenDate, using the alias name OpenDate.
     * @return the value of OpenDate
     */
    public Timestamp getOpenDate() {
        return (Timestamp) getAttributeInternal(OPENDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpenDate.
     * @param value value to set the OpenDate
     */
    public void setOpenDate(Timestamp value) {
        setAttributeInternal(OPENDATE, value);
    }

    /**
     * Gets the attribute value for TaxTypeSno, using the alias name TaxTypeSno.
     * @return the value of TaxTypeSno
     */
    public Integer getTaxTypeSno() {
        return (Integer) getAttributeInternal(TAXTYPESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxTypeSno.
     * @param value value to set the TaxTypeSno
     */
    public void setTaxTypeSno(Integer value) {
        setAttributeInternal(TAXTYPESNO, value);
    }

    /**
     * Gets the attribute value for IsActive, using the alias name IsActive.
     * @return the value of IsActive
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsActive.
     * @param value value to set the IsActive
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the attribute value for CompanyId, using the alias name CompanyId.
     * @return the value of CompanyId
     */
    public Integer getCompanyId() {
        return (Integer) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyId.
     * @param value value to set the CompanyId
     */
    public void setCompanyId(Integer value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for GlobalCompanyId, using the alias name GlobalCompanyId.
     * @return the value of GlobalCompanyId
     */
    public Integer getGlobalCompanyId() {
        return (Integer) getAttributeInternal(GLOBALCOMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlobalCompanyId.
     * @param value value to set the GlobalCompanyId
     */
    public void setGlobalCompanyId(Integer value) {
        setAttributeInternal(GLOBALCOMPANYID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }


    /**
     * @return the associated entity ScmCustomerCategoryImpl.
     */
    public ScmCustomerCategoryImpl getScmCustomerCategory() {
        return (ScmCustomerCategoryImpl) getAttributeInternal(SCMCUSTOMERCATEGORY);
    }

    /**
     * Sets <code>value</code> as the associated entity ScmCustomerCategoryImpl.
     */
    public void setScmCustomerCategory(ScmCustomerCategoryImpl value) {
        setAttributeInternal(SCMCUSTOMERCATEGORY, value);
    }


    /**
     * @return the associated entity ScmCustomerCategoryImpl.
     */
    public ScmCustomerCategoryImpl getScmCustomerCategory1() {
        return (ScmCustomerCategoryImpl) getAttributeInternal(SCMCUSTOMERCATEGORY1);
    }

    /**
     * Sets <code>value</code> as the associated entity ScmCustomerCategoryImpl.
     */
    public void setScmCustomerCategory1(ScmCustomerCategoryImpl value) {
        setAttributeInternal(SCMCUSTOMERCATEGORY1, value);
    }


    /**
     * @param customerCategoryTaxSno key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer customerCategoryTaxSno) {
        return new Key(new Object[] { customerCategoryTaxSno });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT ) {
           String result = ERPGlobalPLSQLClass.doGetPrimaryKeyValueModel(getDBTransaction(), "CUSTOMER_CATEGORY_TAX_SNO",this.getEntityDef().getSource(), null, null);
           populateAttributeAsChanged(CUSTOMERCATEGORYTAXSNO,  Integer.parseInt(result));
        }        
        super.doDML(operation, e);
    }
}

